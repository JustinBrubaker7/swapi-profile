schema {
    query: Query
    mutation: Mutation
}

type Person {
    id: ID!
    name: String!
    height: Int
    mass: Int
    hairColor: String
    skinColor: String
    eyeColor: String
    birthYear: String
    gender: String
    starships: [Starship]
}

type Starship {
    id: ID!
    name: String!
    model: String!
    manufacturer: String!
    costInCredits: Int
    length: Int
    maxAtmospheringSpeed: Int
    crew: String
    passengers: Int
    cargoCapacity: Int
    consumables: String
    hyperdriveRating: Float
    MGLT: Int
    starshipClass: String
    pilots: [Person]
}

type Query {
    people(name: String): [Person]
    person(id: ID!): Person
    starships(name: String): [Starship]
    starship(id: ID!): Starship
}

type Mutation {
    addPerson(personInput: PersonInput!): Person
    addStarship(starshipInput: StarshipInput!): Starship
    assignStarshipToPerson(personId: ID!, starshipId: ID!): AssignmentResult
}

input PersonInput {
    name: String!
    height: Int
    mass: Int
    hairColor: String
    skinColor: String
    eyeColor: String
    birthYear: String
    gender: String
}

input StarshipInput {
    name: String!
    model: String!
    manufacturer: String!
    costInCredits: Int
    length: Int
    maxAtmospheringSpeed: Int
    crew: String
    passengers: Int
    cargoCapacity: Int
    consumables: String
    hyperdriveRating: Float
    MGLT: Int
    starshipClass: String
}

type AssignmentResult {
    person: Person
    starship: Starship
}
